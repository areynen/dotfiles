[ {
  "eventTrigger" : "ON_PACKAGE_FINISHED",
  "enabled" : false,
  "name" : "Create an Info-File in the Download-Folder with detailed information",
  "script" : "/*\n    Event Script: writeInfoFile\n \n                  Creates an Info-File into the DL-Folder with detailed information\n                  \n    Version: 0.21\n \n Requirements:\n    Trigger \"Package Finished\"\n\n Tested:\n     JD2 on Windows7-32bit Platform and jre8 (see path-creation code at the end of this script) \n */\n\n\n//---------- Global declarations -----------------\nvar bWriteFile = false; //pessimistic approach: no file-writing at start, if situation ok, then set it \"true\"\nvar sInfoFilePath = \"\"; //the target file, if already available, then APPENDING, else creation\nvar sText = \"\"; //will be filled with content (or not :-)\nvar sInfoFileType = \".info\" //set path creation at the end of the script\nvar iContent = 0; //setting bit 1 if pwd is available, setting bit 2 if comments available //if not set, no info file\nvar myPackage = package;\nvar aParts = myPackage.getDownloadLinks();\nvar aArchives = package.getArchives();\n\n\n\n\n\n\n//---------- ANALYZING SITUATION ----------\nif (myPackage.isFinished() == true) {\n    //no further analysis due to Trigger \"Package Finished\" :-)\n    bWriteFile = true;\n}\n\n\n\n\n//---------- Building Info-Text -----------\nif (bWriteFile == true) {\n    sText += \"**********************************\" + \"\\r\\n\"\n    sText += \"*          P A C K A G E         *\" + \"\\r\\n\"\n    sText += \"**********************************\" + \"\\r\\n\"\n    sText += \"Package.Name              : \" + myPackage.getName() + \"\\r\\n\" +\n        \"Package.DownloadFolder    : \" + myPackage.getDownloadFolder() + \"\\r\\n\" +\n        \"Package.Total             : \" + myPackage.getBytesTotal() + \"\\r\\n\" +\n        \"Package.Loaded            : \" + myPackage.getBytesLoaded() + \"\\r\\n\" +\n        \"Package.Finished          : \" + myPackage.isFinished() + \"\\r\\n\";\n    if (myPackage.getComment() != undefined) {\n        sText += \"Package.Comment           : \" + myPackage.getComment() + \"\\r\\n\";\n        iContent |= 2;\n    }\n\n    sText += \"\\r\\n\"\n    sText += \"**********************************\" + \"\\r\\n\"\n    sText += \"*            P A R T S           *\" + \"\\r\\n\"\n    sText += \"**********************************\" + \"\\r\\n\"\n    for (var i = 0; i < aParts.length; i++) {\n        sText += \"Part.#                    : \" + i + \"\\r\\n\" +\n            \"Part.Name                 : \" + aParts[i].getName() + \"\\r\\n\" +\n            \"Part.Status               : \" + aParts[i].getStatus() + \"\\r\\n\" +\n            \"Part.Enabled              : \" + aParts[i].isEnabled() + \"\\r\\n\" +\n            \"Part.Finished             : \" + aParts[i].isFinished() + \"\\r\\n\" +\n            \"Part.Skipped              : \" + aParts[i].isSkipped() + \"\\r\\n\" +\n            \"Part.ExtractionStatus     : \" + aParts[i].getExtractionStatus() + \"\\r\\n\" +\n            \"Part.Total                : \" + aParts[i].getBytesTotal() + \"\\r\\n\" +\n            \"Part.Loaded               : \" + aParts[i].getBytesLoaded() + \"\\r\\n\";\n        if (aParts[i].getUrl() != undefined) {\n            sText += \"Part.URL                  : \" + aParts[i].getUrl() + \"\\r\\n\";\n        }\n        if (aParts[i].getComment() != undefined) {\n            sText += \"Part.Comment              : \" + aParts[i].getComment() + \"\\r\\n\";\n            iContent |= 2;\n        }\n        var myArchive = aParts[i].getArchive();\n        if (myArchive != undefined) {\n            if (myArchive.getUsedPassword() != undefined) {\n                sText += \"Part.UsedPassword         : \" + myArchive.getUsedPassword() + \"\\r\\n\";\n                iContent |= 1;\n            }\n        }\n        sText += \"--------------------------:-\" + \"\\r\\n\"\n    }\n\n    sText += \"\\r\\n\"\n    sText += \"**********************************\" + \"\\r\\n\"\n    sText += \"*        A R C H I V E S         *\" + \"\\r\\n\"\n    sText += \"**********************************\" + \"\\r\\n\"\n    for (var i = 0; i < aArchives.length; i++) {\n        sText += \"Archive.#                    : \" + i + \"\\r\\n\" +\n            \"Archive.Name                 : \" + aArchives[i].getName() + \"\\r\\n\" +\n            \"Archive.ArchiveTyp           : \" + aArchives[i].getArchiveType() + \"\\r\\n\";\n\n        if (aArchives[i].getInfo() != undefined) {\n            sText += \"Package.Archive.Info         : \";\n            sText += JSON.stringify(aArchives[i].getInfo(), null, 2) + \"\\r\\n\";\n        }\n        sText += \"--------------------------:-\" + \"\\r\\n\"\n    }\n}\n\n\n\n\n//---------- INFO.FILE naming and writing ----------- \nif (bWriteFile == true && iContent > 0) { //comment out or set \"iContent >= 0\" if info-file should be written always\n    //- path creation\n    sInfoFileType = \".\" + iContent + sInfoFileType //add content-type hint to filetype\n    sInfoFilePath = myPackage.getDownloadFolder() + \"/\" + myPackage.getName() + sInfoFileType; //<packageFolder>/<packageName>.<iContent>.info\n    if (sInfoFilePath.length > 255) { //path to long! -> shorten!!\n        sInfoFilePath = myPackage.getDownloadFolder() + \"/jd\" + sInfoFileType; //<packageFolder>/jd.<iContent>.info\n    }\n    //- writing\n    try {\n        writeFile(sInfoFilePath, sText, true);\n    } catch (e) {\n        //no error handling implemented !    \n    }\n}",
  "eventTriggerSettings" : { },
  "id" : 1605209595623
}, {
  "eventTrigger" : "ON_DOWNLOAD_CONTROLLER_STOPPED",
  "enabled" : true,
  "name" : "Add to consume list when done downloading",
  "script" : "//Add your script here. Feel free to use the available api properties and methods\nif (link.isFinished() == true) {\n    var sourceFile = link.getDownloadPath();\n    if (sourceFile.indexOf(\"mkv\") != -1) {\n        if (sourceFile.indexOf(\"mkv.0\") != -1 && sourceFile.indexOf(\"mkv.001\") == -1) {\n        }\n        else {\n            writeFile(\"/home/alex/.local/bin/to_consume.txt\", sourceFile.replace(\"mkv.001\",\"mkv\") + \";mpv\\n\", true);    \n        }\n    }\n}",
  "eventTriggerSettings" : {
    "isSynchronous" : false
  },
  "id" : 1605129068212
} ]